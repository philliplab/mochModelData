document()
build()
install()
library(mochModelData)
help(package = 'mochModelData')
library(ggplot2)
help(package = 'ggplot2')
help(package = 'stats')
library(help = 'stats')
stats-package
library(stats)
stats-package
document(); build(); install()
reload()
help(package='mochModelData')
document(); build(); install(); reload()
document(); build(); install(); reload()
document(); build(); install(); reload()
document(); build(); install(); reload()
document(); build(); install(); reload()
document(); build(); install(); reload()
document(); build(); install(); reload()
reload()
document()
build()
install()
reload()
detach('package:mochModelData', unload=TRUE)
library(mochModelData)
help(package='mochModelData')
?mochModelData
document()
document()
document()
build()
install()
document()
build()
install()
document()
build()
install()
reload()
help(package='mochModelData')
document()
build()
install()
reload()
help(package='mochModelData')
document()
build()
install()
reload()
help(package='mochModelData')
document(); build(); install(); reload()
help(package='mochModelData')
document(); build(); install(); reload()
library(devtools); document(); build(); install(); reload(); help(package='mochModelData')
library(devtools); document(); build(); install(); reload(); help(package='mochModelData')
library(devtools); document(); build(); install(); reload(); help(package='mochModelData')
library(devtools); document(); build(); install(); reload(); help(package='mochModelData')
library(devtools); document(); build(); install(); reload(); help(package='mochModelData')
library(devtools); document(); build(); install(); reload(); help(package='mochModelData')
library(devtools); document(); build(); install(); reload(); help(package='mochModelData')
x <- read.csv(file.choose())
x
str(x)
dput(x)
?save
save(x, 'DropOutRates.RData')
save(x, file='DropOutRates.RData')
library(mochModelData)
DropOutRates
library(devtools)
document()
library(mochModelData)
DropOutRates
library(devtools); document()
library(mochModelData)
library(devtools); document()
library(devtools); document()
library(mochModelData)
DropOutRates
library(devtools); document()
library(mochModelData)
DropOutRates
data(DropOutRates)
DropOutRates
data()
data('DropOutRates')
DropOutRates
library(mochModelData)
DropOutRates
data(DropOutRates)
DropOutRates
library(devtools); document()
library(mochModelData)
DropOutRates
data(DropOutRates)
DropOutRates
save(x, file='DropOutRates.rda')
x
library(mochModelData)
data(DropOutRates)
DropOutRates
library(devtools); document(); build(); install()
library(devtools); document(); build(); install()
library(devtools); document(); build(); install()
library(devtools); document(); build(); install(); library(mochModelData)
data()
DropOutRates <- x
save(DropOutRates, file='DropOutRates.rda')
library(devtools); document(); build(); install(); library(mochModelData)
library(devtools); document(); build(); install(); library(mochModelData)
data()
DropOutRates
data()
library(devtools); document(); build(); install(); library(mochModelData)
library(devtools); document(); build(); install(); library(mochModelData)
data()
help(package = 'mochModelData')
masss <- function(orm, reps){orm/(1+0.0333*reps)}
masss(200, 10)
masss(200, 1)
masss(200, 0)
masss(200, 1:10)
masss(200, 1:20)
plot(masss(200, 1:20))
140+140*0.0333*15
115+115*0.0333*5
115+115*0.333
140+140*0.0333*6
140+140*0.0333*15
140/0.9
140/.8
600/2.2
405/2.2
DropOutRates
library(mochModelData)
DropOutRates
data(DropOutRates)
DropOutRates
write.csv(DropOutRates, "DropOutRates.csv", row.names=FALSE)
library(mochModelData)
DropOutRates
DropOutRates
DropOutRates
data(DropOutRates)
library(mochModelData)
library(mochModelData)
DropOutRates
data(DropOutRates)
DropOutRates
DropOutRates$dropout_prob[1]
DropOutRates <- read.csv(file.choose())
DropOutRates
DropOutRates <- DropOutRates[,1:3]
DropOutRates
save(DropOutRates, "DropOutRates.rda")
save(DropOutRates, file="DropOutRates.rda")
library(mochModelData)
data(DropOutRates)
DropOutRates
?data
z <- data(DropOutRates)
z
library(mochModelData)
format_DropOutRates()
is.null(NULL)
format_DropOutRates()
format_DropOutRates(123)
format_DropOutRates()
DropOutRates
library(mochModelData)
format_DropOutRates()
library(mochModelData)
format_DropOutRates()
format_DropOutRates(DropOutRates)
DropOutRates
names(DropOutRates) <- c("SCHOOL_YEARS", "SOCIO_ECONOMIC_STATE", "DropOutRates")
DropOutRates
save(DropOutRates, file="DropOutRates.rda")
library(mochModelData)
data(DropOutRates)
DropOutRates
?order
DropOutRates <- DropOutRates[order(SOCIO_ECONOMIC_STATE, SCHOOL_YEARS),]
DropOutRates <- DropOutRates[with(DropOutRates, order(SOCIO_ECONOMIC_STATE, SCHOOL_YEARS)),]
DropOutRates
library(mochModelData)
data(DropOutRates); format_DropOutRates(DropOutRates)
library(mochModelData)
data(DropOutRates); format_DropOutRates(DropOutRates)
library(mochModelData)
data(DropOutRates); format_DropOutRates(DropOutRates)
library(mochModelData)
data(DropOutRates); format_DropOutRates(DropOutRates)
library(mochModelData)
data(DropOutRates); format_DropOutRates(DropOutRates)
library(mochModelData)
data(DropOutRates); format_DropOutRates(DropOutRates)
library(mochModelData)
data(DropOutRates); format_DropOutRates(DropOutRates)
library(mochModelData)
data(DropOutRates); format_DropOutRates(DropOutRates)
digest(DropOutRates)
library(digest)
library(mochModelData)
digest(DropOutRates)
DropOutRates
library(mochModelData)
library(mochModelData)
library(devtools)
library(devtools); document(); build(); install(); test()
format_DropOutRates(DropOutRates)
digest(format_DropOutRates(DropOutRates))
library(mochModelData)
library(devtools); document(); build(); install(); test()
read.csv('Book1.csv')
AbuseRates <- read.csv('Book1.csv')
AbuseRates
save(AbuseRates, "AbuseRates.rda")
save(AbuseRates, file = "AbuseRates.rda")
library(mochModelData)
data(AbuseRates)
AbuseRates
digest(AbuseRates)
library(mochModelData)
library(devtools); document(); build(); install(); test()
library(devtools); document(); build(); install(); test()
library(mochModelData)
library(devtools); document(); build(); install(); test()
AbuseRates
melt(AbuseRates, id.vars = Áge')'
melt(AbuseRates, id.vars = 'Age')
AbuseRates <- melt(AbuseRates, id.vars = 'Age')
str(AbuseRates)
AbuseRates <- melt(AbuseRates, id.vars = 'Age')
AbuseRates$variable <- as.character(AbuseRates$variable)
parsed_headers <- do.call(rbind, lapply(strsplit(AbuseRates$variable, '\\.'),
coerce_EXCEL_col_header_to_df))
coerce_EXCEL_col_header_to_df <- function(x)
{
data.frame(gender = x[1],
ses = x[2],
mds = x[3],
stringsAsFactors = FALSE)
}
coerce_to_nice_string <- function(x){
string <- ""
n_ages <- length(unique(x$age))
for (i in 1:nrow(x)){
if ((i-1) %% n_ages == 0){
string <- str_c(string, "//", x$gender[i], ", ", x$ses[i], ", ", x$mds[i], "\n")
}
string <- str_c(string, x$value[i], ", ")
if (i %% n_ages == 0){
string <- str_c(string, "\n")
}
}
return(string)
}
AbuseRates <- melt(AbuseRates, id.vars = 'Age')
AbuseRates$variable <- as.character(AbuseRates$variable)
parsed_headers <- do.call(rbind, lapply(strsplit(AbuseRates$variable, '\\.'),
coerce_EXCEL_col_header_to_df))
AbuseRates <- cbind(parsed_headers, AbuseRates)
AbuseRates$variable <- NULL
AbuseRates <- AbuseRates[with(AbuseRates, order(gender, ses, mds, age)),]
AbuseRates <- AbuseRates[with(AbuseRates, order(gender, ses, mds, Age)),]
str(AbuseRates)
data(AbuseRates)
AbuseRates <- melt(AbuseRates, id.vars = 'Age')
AbuseRates$variable <- as.character(AbuseRates$variable)
parsed_headers <- do.call(rbind, lapply(strsplit(AbuseRates$variable, '\\.'),
coerce_EXCEL_col_header_to_df))
str(AbuseRates)
str(parsed_headers)
AbuseRates <- cbind(parsed_headers, AbuseRates)
str(AbuseRates)
AbuseRates$variable <- NULL
AbuseRates <- AbuseRates[with(AbuseRates, order(gender, ses, mds, Age)),]
str(AbuseRates)
modgen_repr <- coerce_ABUSE_DEP_to_nice_string(AbuseRates)
coerce_ABUSE_DEP_to_nice_string <- function(x){
string <- ""
n_ages <- length(unique(x$Age))
for (i in 1:nrow(x)){
if ((i-1) %% n_ages == 0){
string <- str_c(string, "//", x$gender[i], ", ", x$ses[i], ", ", x$mds[i], "\n")
}
string <- str_c(string, x$value[i], ", ")
if (i %% n_ages == 0){
string <- str_c(string, "\n")
}
}
return(string)
}
modgen_repr <- coerce_ABUSE_DEP_to_nice_string(AbuseRates)
coerce_ABUSE_DEP_to_nice_string <- function(x){
string <- ""
n_ages <- length(unique(x$Age))
for (i in 1:nrow(x)){
if ((i-1) %% n_ages == 0){
string <- paste(string, "//", x$gender[i], ", ", x$ses[i], ", ", x$mds[i], "\n", sep = "")
}
string <- paste(string, x$value[i], ", ", sep = "")
if (i %% n_ages == 0){
string <- paste(string, "\n", sep = "")
}
}
return(string)
}
modgen_repr <- coerce_ABUSE_DEP_to_nice_string(AbuseRates)
cat(modgen_repr)
#'
coerce_ABUSE_DEP_to_nice_string <- function(x){
string <- ""
n_ages <- length(unique(x$Age))
for (i in 1:nrow(x)){
if ((i-1) %% n_ages == 0){
string <- paste(string, "//", x$gender[i], ", ", x$ses[i], ", ", x$mds[i], "\n", sep = "")
}
string <- paste(string, x$value[i], ", ", sep = "")
if (i %% n_ages == 0){
string <- paste(string, "\n", sep = "")
}
}
string <- gsub(',[,]*$', '', string)
return(string)
}
modgen_repr <- coerce_ABUSE_DEP_to_nice_string(AbuseRates)
cat(modgen_repr)
modgen_repr
coerce_ABUSE_DEP_to_nice_string <- function(x){
string <- ""
n_ages <- length(unique(x$Age))
for (i in 1:nrow(x)){
if ((i-1) %% n_ages == 0){
string <- paste(string, "//", x$gender[i], ", ", x$ses[i], ", ", x$mds[i], "\n", sep = "")
}
string <- paste(string, x$value[i], ", ", sep = "")
if (i %% n_ages == 0){
string <- paste(string, "\n", sep = "")
}
}
string <- gsub(',[^,]*$', '', string)
return(string)
}
modgen_repr <- coerce_ABUSE_DEP_to_nice_string(AbuseRates)
cat(modgen_repr)
data(AbuseRates)
AbuseRates <- melt(AbuseRates, id.vars = 'Age')
AbuseRates$variable <- as.character(AbuseRates$variable)
parsed_headers <- do.call(rbind, lapply(strsplit(AbuseRates$variable, '\\.'),
coerce_EXCEL_col_header_to_df))
AbuseRates <- cbind(parsed_headers, AbuseRates)
AbuseRates$variable <- NULL
AbuseRates
library(mochModelData)
data(AbuseRates)
format_AbuseRates(AbuseRates)
library(mochModelData)
format_AbuseRates(AbuseRates)
?ordered
library(mochModelData)
format_AbuseRates(AbuseRates)
library(mochModelData)
format_AbuseRates(AbuseRates)
cat(format_AbuseRates(AbuseRates))
library(mochModelData)
library(devtools); document(); build(); install(); test()
library(devtools); document(); build(); install(); test()
format_AbuseRates(AbuseRates)
digest(format_AbuseRates(AbuseRates))
library(mochModelData)
library(devtools); document(); build(); install(); test()
DepressionAbuseRates <- read.csv("DepressionAbuseData.csv")
DepressionAbuseRates
save(DepressionAbuseRates, file = "DepressionAbuseRates.rda")
DepressionNoAbuseRates <- read.csv("DepressionNoAbuseData.csv")
save(DepressionNoAbuseRates, file = "DepressionNoAbuseRates.rda")
library(mochModelData)
help(package = 'mochModelData')
data(DepressionAbuseRates)
data(DepressionNoAbuseRates)
DepressionAbuseRates)
DepressionAbuseRates
DepressionNoAbuseRates
digest(DepressionNoAbuseRates)
digest(DepressionAbuseRates)
library(mochModelData)
library(devtools); document(); build(); install(); test()
library(devtools); document(); build(); install(); test()
library(mochModelData)
data(DepressionNoAbuseRates)
format_DepressionNoAbuseRates(DepressionNoAbuseRates)
str(DepressionNoAbuseRates)
library(mochModelData)
format_DepressionNoAbuseRates(DepressionNoAbuseRates)
cat(format_DepressionNoAbuseRates(DepressionNoAbuseRates))
library(mochModelData)
cat(format_DepressionAbuseRates(DepressionAbuseRates))
digest(format_DepressionAbuseRates(DepressionAbuseRates))
digest(format_DepressionNoAbuseRates(DepressionNoAbuseRates))
library(mochModelData)
library(devtools); document(); build(); install(); test()
library(devtools)
document(); build(); install()
document(); build(); install()
library(devtools); document(); build(); install()
test()
library(devtools); document(); build(); install(); test()
library(devtools); document(); build(); install(); test()
library(devtools); document(); build(); install(); test()
library(devtools); document(); build(); install(); test()
NotAbusedDepressionRates <- read.csv("DepressionNoAbuseData.csv")
AbusedDepressionRates <- read.csv("DepressionAbuseData.csv")
save(AbusedDepressionRates, file = "AbusedDepressionRates.rda")
save(NotAbusedDepressionRates, file = "NotAbusedDepressionRates.rda")
library(devtools); document(); build(); install(); test()
library(devtools); document(); build(); install(); test()
AbusedDepressionRates
AbusedCondomUsageRates <- read.csv("AbusedCondomUsageRates.csv", stringsAsFactors = FALSE)
AbusedCondomUsageRates
save(AbusedCondomUsageRates, file="AbusedCondomUsageRates.rda")
NotAbusedCondomUsageRates <- read.csv("NotAbusedCondomUsageRates.csv", stringsAsFactors = FALSE)
save(NotAbusedCondomUsageRates, file="NotAbusedCondomUsageRates.rda")
library(devtools); document(); build(); install(); test()
library(devtools); document(); build(); install(); test()
library(devtools); document(); build(); install(); test()
data(AbusedCondomUsageRates)
AbusedCondomUsageRates
format_AbuseRates(AbusedCondomUsageRates)
AbusedCondomUsageRates <- melt(AbusedCondomUsageRates)
AbusedCondomUsageRates$variable <- as.character(AbusedCondomUsageRates$variable)
parsed_headers <- do.call(rbind, lapply(strsplit(AbusedCondomUsageRates$variable, '\\.'),
coerce_EXCEL_col_header_to_df))
AbusedCondomUsageRates <- cbind(parsed_headers, AbusedCondomUsageRates)
AbusedCondomUsageRates$variable <- NULL
remaps <- list(X0 = "HEALTHY",
X1 = "INFECTED",
X2 = "SYMPTOMS",
X3 = "TREATMENT",
X4 = "DIAGNOSED",
X5 = "DEATH")
for (i in 1:nrow(AbusedCondomUsageRates)){
AbusedCondomUsageRates$mds[i] <- remaps[[AbusedCondomUsageRates$mds[i]]]
}
AbusedCondomUsageRates$value[AbusedCondomUsageRates$mds == "DIAGNOSED"] <- AbusedCondomUsageRates$value[AbusedCondomUsageRates$mds == "INFECTED"]
AbusedCondomUsageRates$mds <- factor(AbusedCondomUsageRates$mds,
levels = c("HEALTHY", "INFECTED", "SYMPTOMS",
"DIAGNOSED", "TREATMENT", "DEATH"),
ordered = TRUE)
AbusedCondomUsageRates <- AbusedCondomUsageRates[with(AbusedCondomUsageRates, order(gender, ses, mds, Age)),]
AbusedCondomUsageRates <- AbusedCondomUsageRates[with(AbusedCondomUsageRates, order(gender, ses, mds)),]
modgen_repr <- coerce_AbusedCondomUsage_DEP_to_nice_string(AbusedCondomUsageRates)
modgen_repr <- coerce_ABUSE_DEP_to_nice_string(AbusedCondomUsageRates)
coerce_condom_usage_to_nice_string <- function(x){
string <- ""
for (i in 1:nrow(x)){
string <- paste(string, x$value[i], ", ", sep = "")
}
string <- gsub(',[^,]*$', '', string)
return(string)
}
modgen_repr <- coerce_condom_usage_to_nice_string(AbusedCondomUsageRates)
modgen_repr
modgen_repr <- coerce_condom_usage_to_nice_string(NotAbusedCondomUsageRates)
modgen_repr
source('~/projects/mochModelData/R/format_data.R')
format_CondomUsageRates(NotAbusedCondomUsageRates)
format_CondomUsageRates(AbusedCondomUsageRates)
library(devtools); document(); build(); install(); test()
library(devtools); document(); build(); install(); test()
data(AbusedCondomUsageRates)
data(NotAbusedCondomUsageRates)
AbusedCondomUsageRates
NotAbusedCondomUsageRates
digest(AbusedCondomUsageRates)
digest(NotAbusedCondomUsageRates)
digest(format_CondomUsageRates(AbusedCondomUsageRates))
digest(format_CondomUsageRates(NotAbusedCondomUsageRates))
library(devtools); document(); build(); install(); test()
library(devtools); document(); build(); install(); test()
format_CondomUsageRates(AbusedCondomUsageRates)
format_CondomUsageRates(NotAbusedCondomUsageRates)
source('~/projects/mochModelData/R/format_data.R')
format_CondomUsageRates(NotAbusedCondomUsageRates)
cat(format_CondomUsageRates(NotAbusedCondomUsageRates))
source('~/projects/mochModelData/R/format_data.R')
cat(format_CondomUsageRates(NotAbusedCondomUsageRates))
source('~/projects/mochModelData/R/format_data.R')
cat(format_CondomUsageRates(NotAbusedCondomUsageRates))
digest(format_CondomUsageRates(NotAbusedCondomUsageRates))
digest(format_CondomUsageRates(AbusedCondomUsageRates))
library(devtools); document(); build(); install(); test()
library(devtools); document(); build(); install(); test()
cat(format_CondomUsageRates(AbusedCondomUsageRates))
cat(format_CondomUsageRates(NotAbusedCondomUsageRates))
plot(density(rweibull(1000, 8.5,18)))
plot(density(rweibull(1000, 8.5,19)))
plot(density(rweibull(1000, 8.5,18)))
plot(density(rweibull(1000, 8.5,20)))
points(density(rweibull(1000, 8.5,20)), col = 'red', type = 'l')
points(density(rweibull(100000, 8.5,20)), col = 'red', type = 'l')
plot(density(rweibull(1000000, 8.5,20)))
points(density(rweibull(1000000, 8.5,18)), col = 'red', type = 'l')
115+115*5*0.0333
115+115*6*0.0333
105+105*0.333
405/2.2
